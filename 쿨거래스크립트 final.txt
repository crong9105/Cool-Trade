-- 테이블
DROP TABLE ADDRESS CASCADE CONSTRAINTS;
DROP TABLE ALARM CASCADE CONSTRAINTS;
DROP TABLE BANK_ACCOUNT CASCADE CONSTRAINTS;
DROP TABLE CATEGORY CASCADE CONSTRAINTS;
DROP TABLE CHATROOM CASCADE CONSTRAINTS;
DROP TABLE IMAGES CASCADE CONSTRAINTS;
DROP TABLE LIKE_PRODUCT CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE MESSAGE CASCADE CONSTRAINTS;
DROP TABLE NOTICE CASCADE CONSTRAINTS;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;
DROP TABLE PRODUCT_STATUS CASCADE CONSTRAINTS;
DROP TABLE REPORT CASCADE CONSTRAINTS;
DROP TABLE REPORT_TYPE CASCADE CONSTRAINTS;
DROP TABLE REVIEW CASCADE CONSTRAINTS;
DROP TABLE TRADE CASCADE CONSTRAINTS;

-- 시퀀스
DROP SEQUENCE SEQ_ALARM;
DROP SEQUENCE SEQ_BANK;
DROP SEQUENCE SEQ_CHATROOM;
DROP SEQUENCE SEQ_IMG;
DROP SEQUENCE SEQ_MEM;
DROP SEQUENCE SEQ_MSG;
DROP SEQUENCE SEQ_NOTICE;
DROP SEQUENCE SEQ_PRODUCT;
DROP SEQUENCE SEQ_REPORT;
DROP SEQUENCE SEQ_REVIEW;
DROP SEQUENCE SEQ_TRADE;

------------------------------------------------------------ MEMBER 테이블 생성
CREATE TABLE MEMBER (
    USER_NO NUMBER NOT NULL PRIMARY KEY,
    USER_ID VARCHAR2(15) NOT NULL UNIQUE,
    USER_PWD VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(20) NOT NULL,
    NICKNAME VARCHAR2(40) NOT NULL,
    PHONE VARCHAR2(14) NOT NULL,
    EMAIL VARCHAR2(40) NOT NULL,
    ENROLL_DATE DATE DEFAULT SYSDATE,
    ONDO NUMBER DEFAULT 36.5,
    USER_LEVEL CHAR(1) DEFAULT 'U' CHECK (USER_LEVEL IN ('U', 'A', 'B', 'C')),
    USER_STATUS CHAR(1) DEFAULT 'Y' CHECK (USER_STATUS IN ('N', 'Y')),
    CAUTION NUMBER NOT NULL
);


-- 컬럼에 대한 설명 추가
COMMENT ON COLUMN MEMBER.USER_NO IS '회원번호';
COMMENT ON COLUMN MEMBER.USER_ID IS '아이디';
COMMENT ON COLUMN MEMBER.USER_PWD IS '비밀번호';
COMMENT ON COLUMN MEMBER.USER_NAME IS '회원명';
COMMENT ON COLUMN MEMBER.NICKNAME IS '닉네임';
COMMENT ON COLUMN MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.ENROLL_DATE IS '가입일';
COMMENT ON COLUMN MEMBER.ONDO IS '온도점수';
COMMENT ON COLUMN MEMBER.USER_LEVEL IS '회원등급';
COMMENT ON COLUMN MEMBER.USER_STATUS IS '회원상태';
COMMENT ON COLUMN MEMBER.CAUTION IS '경고';

CREATE SEQUENCE SEQ_MEM;

-- MEMBER 테이블에 데이터 삽입
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'admin', '1234', '관리자', '쿨거래관리자', '010-1234-5678', 'admin@example.com', SYSDATE, 36.5, 'U', 'Y', 0);
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'user01', 'pass1234!', '김철수', '닉넴01', '010-2345-6789', 'user01@example.com', SYSDATE, 36.5, 'U', 'Y', 1);
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'user02', 'pass1234!', '이영희', '닉넴02', '010-3456-7890', 'user02@example.com', SYSDATE, 36.5, 'U', 'Y', 2);
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'user03', 'pass1234!', '박민수', '닉넴03', '010-4567-8901', 'user03@example.com', SYSDATE, 36.5, 'C', 'Y', 0);
INSERT INTO MEMBER VALUES (SEQ_MEM.NEXTVAL, 'user04', 'pass1234!', '정수미', '닉넴04', '010-5678-9012', 'user04@example.com', SYSDATE, 36.5, 'B', 'Y', 3);


---------------------------------------------------------------- BANK_ACCOUNT 테이블
CREATE TABLE BANK_ACCOUNT(
    BANKACCOUNT_NO NUMBER PRIMARY KEY,
    USER_NO NUMBER NOT NULL REFERENCES MEMBER,
    BANK VARCHAR2(20), 
    ACCOUNT VARCHAR2(30) 
);

-- 컬럼에 대한 설명 추가
COMMENT ON COLUMN BANK_ACCOUNT.BANKACCOUNT_NO IS '계좌구분번호';
COMMENT ON COLUMN BANK_ACCOUNT.USER_NO IS '회원번호';
COMMENT ON COLUMN BANK_ACCOUNT.BANK IS '은행';
COMMENT ON COLUMN BANK_ACCOUNT.ACCOUNT IS '계좌번호';

-- SEQ_BANO 시퀀스를 생성
CREATE SEQUENCE SEQ_BANK
NOCACHE;

-- BANK_ACCOUNT 테이블에 데이터 삽입
INSERT INTO BANK_ACCOUNT VALUES (SEQ_BANK.NEXTVAL, '1' , '국민은행','100-123-123451');
INSERT INTO BANK_ACCOUNT VALUES (SEQ_BANK.NEXTVAL, '2', 'K뱅크', '111-222-333333');
INSERT INTO BANK_ACCOUNT VALUES (SEQ_BANK.NEXTVAL, '3', '신한은행', '333-222-121212');
INSERT INTO BANK_ACCOUNT VALUES (SEQ_BANK.NEXTVAL, '4', '하나은행', '222-333-555555');
INSERT INTO BANK_ACCOUNT VALUES (SEQ_BANK.NEXTVAL, '5', '카카오뱅크', '135-823-124568');


------------------------------------------------------------- ADDRESS 테이블
CREATE TABLE ADDRESS(
    USER_NO NUMBER PRIMARY KEY REFERENCES MEMBER,
    ADDRESS_1 VARCHAR2(200),
    DETAIL_1 VARCHAR2(200),
    POSTCODE_1 NUMBER,
    ADDRESS_2 VARCHAR2(200),
    DETAIL_2 VARCHAR2(200),
    POSTCODE_2 NUMBER,
    ADDRESS_3 VARCHAR2(200),
    DETAIL_3 VARCHAR2(200),
    POSTCODE_3 NUMBER,
    ADDRESS_4 VARCHAR2(200),
    DETAIL_4 VARCHAR2(200),
    POSTCODE_4 NUMBER,
    ADDRESS_5 VARCHAR2(200),
    DETAIL_5 VARCHAR2(200),
    POSTCODE_5 NUMBER
);

-- 컬럼에 대한 설명 추가
COMMENT ON COLUMN ADDRESS.USER_NO IS '회원번호';
COMMENT ON COLUMN ADDRESS.ADDRESS_1 IS '주소1기본주소';
COMMENT ON COLUMN ADDRESS.DETAIL_1 IS '주소1상세주소';
COMMENT ON COLUMN ADDRESS.POSTCODE_1 IS '주소1우편번호';
COMMENT ON COLUMN ADDRESS.ADDRESS_2 IS '주소2기본주소';
COMMENT ON COLUMN ADDRESS.DETAIL_2 IS '주소2상세주소';
COMMENT ON COLUMN ADDRESS.POSTCODE_2 IS '주소2우편번호';
COMMENT ON COLUMN ADDRESS.ADDRESS_3 IS '주소3기본주소';
COMMENT ON COLUMN ADDRESS.DETAIL_3 IS '주소3상세주소';
COMMENT ON COLUMN ADDRESS.POSTCODE_3 IS '주소3우편번호';
COMMENT ON COLUMN ADDRESS.ADDRESS_4 IS '주소4기본주소';
COMMENT ON COLUMN ADDRESS.DETAIL_4 IS '주소4상세주소';
COMMENT ON COLUMN ADDRESS.POSTCODE_4 IS '주소4우편번호';
COMMENT ON COLUMN ADDRESS.ADDRESS_5 IS '주소5기본주소';
COMMENT ON COLUMN ADDRESS.DETAIL_5 IS '주소5상세주소';
COMMENT ON COLUMN ADDRESS.POSTCODE_5 IS '주소5우편번호';


-- ADDRESS 테이블에 데이터를 삽입
INSERT INTO ADDRESS VALUES ('5', '서울', '강남', 06234, '서울', '역삼', 12122, '서울', '종로', 12453, '서울', '용산', 33232, '서울', '삼성', 12543);
INSERT INTO ADDRESS VALUES ('4', '경기도',' 수원', 12345, '경기도', '화성', 13442, '경기도', '안양', 35787, '경기도', '용인', 32584, '경기도', '광주', 33254);
INSERT INTO ADDRESS VALUES ('3', '전라남도','광주', 45467, '전라남도', '순천', 51615, '전라남도', '나주', 36965, '강원도', '강릉', 34562, '경기도', '양평', 52543);
INSERT INTO ADDRESS VALUES ('2', '경상북도','경주', 78978, '경상북도', '안동', 12452, '경상북도', '문경', 12542, '경상북도', '청도', 25333, '경상북도', '포항', 33568);
INSERT INTO ADDRESS VALUES ('1', '인천','주안', 13131, '충청남도', '천안', 13495, '충청북도', '청주', 12453, '강원도', '철원', 25243, '강원도', '홍천', 32583);


----------------------------------------------------------------- 카테고리 테이블
CREATE
       TABLE CATEGORY
     (
       CATEGORY_NO VARCHAR2(20) CONSTRAINT PK_CATEGORY PRIMARY KEY
     , CATEGORY_NAME VARCHAR2(20) NOT NULL
     );
     
COMMENT ON COLUMN CATEGORY.CATEGORY_NO IS '카테고리 번호';
COMMENT ON COLUMN CATEGORY.CATEGORY_NAME IS '카테고리 이름';


INSERT INTO CATEGORY VALUES('C1', '패션의류');
INSERT INTO CATEGORY VALUES('C2', '패션잡화');
INSERT INTO CATEGORY VALUES('C3', '뷰티');
INSERT INTO CATEGORY VALUES('C4', '전자제품');
INSERT INTO CATEGORY VALUES('C5', '리빙/생활');
INSERT INTO CATEGORY VALUES('C6', '가구/인테리어');
INSERT INTO CATEGORY VALUES('C7', '반려동물');
INSERT INTO CATEGORY VALUES('C8', '도서/음반/문구');
INSERT INTO CATEGORY VALUES('C9', '상품권');
INSERT INTO CATEGORY VALUES('C10', '무료나눔');


--------------------------------------------------------------------- 제품상태 테이블
CREATE
       TABLE PRODUCT_STATUS
     (
       PSTATUS_NO VARCHAR2(20) CONSTRAINT PK_PRODUCT_STATUS PRIMARY KEY
     , PSTATUS VARCHAR2(20) NOT NULL
     );
     
COMMENT ON COLUMN PRODUCT_STATUS.PSTATUS_NO IS '제품상태 식별번호';
COMMENT ON COLUMN PRODUCT_STATUS.PSTATUS IS '제품상태';

INSERT INTO PRODUCT_STATUS VALUES('PS1','새상품');
INSERT INTO PRODUCT_STATUS VALUES('PS2','사용감 없음');
INSERT INTO PRODUCT_STATUS VALUES('PS3','사용감 적음');
INSERT INTO PRODUCT_STATUS VALUES('PS4','사용감 많음');
INSERT INTO PRODUCT_STATUS VALUES('PS5','고장/파손상품');


--------------------------------------------------------------------- 상품 테이블
CREATE 
       TABLE PRODUCT
     ( 
       PRODUCT_NO NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY
     , SELLER_NO NUMBER NOT NULL CONSTRAINT FK_PRODUCT_01 REFERENCES MEMBER
     , CATEGORY_NO VARCHAR2(20) NOT NULL CONSTRAINT FK_PRODUCT_02 REFERENCES CATEGORY
     , PRODUCT_NAME VARCHAR2(200) NOT NULL
     , PRICE NUMBER NOT NULL
     , PRODUCT_DESC VARCHAR2(4000)
     , ZONE VARCHAR2(20)
     , PRODUCT_STATUS VARCHAR2(20) NOT NULL CONSTRAINT FK_PRODUCT_03 REFERENCES PRODUCT_STATUS
     , UPLOAD_DATE DATE DEFAULT SYSDATE
     , UPLOAD_TYPE CHAR(1) DEFAULT 'Y' CHECK (UPLOAD_TYPE IN('Y', 'N'))
     );
     
COMMENT ON COLUMN PRODUCT.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN PRODUCT.SELLER_NO IS '판매자';
COMMENT ON COLUMN PRODUCT.CATEGORY_NO IS '카테고리번호';
COMMENT ON COLUMN PRODUCT.PRODUCT_NAME IS '상품명';
COMMENT ON COLUMN PRODUCT.PRICE IS '가격';
COMMENT ON COLUMN PRODUCT.PRODUCT_DESC IS '상품설명';
COMMENT ON COLUMN PRODUCT.ZONE IS '거래지역';
COMMENT ON COLUMN PRODUCT.PRODUCT_STATUS IS '제품상태번호';
COMMENT ON COLUMN PRODUCT.UPLOAD_DATE IS '등록날짜';
COMMENT ON COLUMN PRODUCT.UPLOAD_TYPE IS '등록유형';

CREATE SEQUENCE SEQ_PRODUCT
NOCACHE;

INSERT 
       INTO PRODUCT
       VALUES
     (
       SEQ_PRODUCT.NEXTVAL
     , '1'
     , 'C1'
     , '도깨비팬티'
     , '750000'
     , '도깨비 공유가 입던 팬티'
     , '서울'
     , 'PS4'
     , SYSDATE
     , DEFAULT
     );
     
INSERT 
       INTO PRODUCT
       VALUES
     (
       SEQ_PRODUCT.NEXTVAL
     , '2'
     , 'C2'
     , '도깨비감투'
     , '2500000'
     , '머리에 쓰면 투명해지는 감투'
     , '경상도'
     , 'PS2'
     , SYSDATE
     , DEFAULT
     );
     
INSERT 
       INTO PRODUCT
       VALUES
     (
       SEQ_PRODUCT.NEXTVAL
     , '3'
     , 'C3'
     , '도깨비방망이'
     , '230000'
     , '휘두르면 금이나오는 방망이'
     , '경기도'
     , 'PS1'
     , SYSDATE
     , DEFAULT
     );
     
INSERT 
       INTO PRODUCT
       VALUES
     (
       SEQ_PRODUCT.NEXTVAL
     , '4'
     , 'C4'
     , '도깨비뿔'
     , '2500'
     , '뾰족한 도깨비의 뿔'
     , '인천'
     , 'PS5'
     , SYSDATE
     , DEFAULT
     );
     
INSERT 
       INTO PRODUCT
       VALUES
     (
       SEQ_PRODUCT.NEXTVAL
     , '5'
     , 'C5'
     , '메밀묵'
     , '1500'
     , '도깨비가 좋아하는 메밀묵'
     , '서울'
     , 'PS1'
     , SYSDATE
     , DEFAULT
     );


--------------------------------------------------------------------------------
-------------------------------------이미지--------------------------------------
--------------------------------------------------------------------------------

CREATE
       TABLE IMAGES
     (
       IMG_NO NUMBER CONSTRAINT PK_IMAGES PRIMARY KEY
     , REF_PNO NUMBER CONSTRAINT FK_IMAGES REFERENCES PRODUCT
     , IMG_LEVEL NUMBER NOT NULL CHECK(IMG_LEVEL IN(1,2))
     , ORIGIN_NAME VARCHAR2(255) NOT NULL
     , CHANGE_NAME VARCHAR2(255) NOT NULL
     , IMG_PATH VARCHAR2(4000) NOT NULL
     , UPLOAD_DATE DATE DEFAULT SYSDATE NOT NULL
     , IMG_STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(IMG_STATUS IN('Y','N'))
     );
     
COMMENT ON COLUMN IMAGES.IMG_NO IS '이미지 구분번호';
COMMENT ON COLUMN IMAGES.REF_PNO IS '상품번호';
COMMENT ON COLUMN IMAGES.IMG_LEVEL IS '이미지 구분'; -- 1:대표이미지(썸네일) 2:상세이미지
COMMENT ON COLUMN IMAGES.ORIGIN_NAME IS '이미지 원본 파일명';
COMMENT ON COLUMN IMAGES.CHANGE_NAME IS '이미지 변경 파일명';
COMMENT ON COLUMN IMAGES.IMG_PATH IS '이미지 경로';
COMMENT ON COLUMN IMAGES.UPLOAD_DATE IS '업로드 날짜'; -- SYSDATE DEFAULT
COMMENT ON COLUMN IMAGES.IMG_STATUS IS '이미지 상태'; -- 'Y' OR 'N'

CREATE SEQUENCE SEQ_IMG
NOCACHE;


---------------------------------------------------------------- 관심상품 테이블
CREATE 
       TABLE LIKE_PRODUCT
     ( 
       USER_NO NUMBER REFERENCES MEMBER
     , PRODUCT_NO NUMBER REFERENCES PRODUCT
     , LIKEDATE DATE DEFAULT SYSDATE NOT NULL 
     , CONSTRAINT PK_LIKE PRIMARY KEY(USER_NO, PRODUCT_NO) 
     );
     
COMMENT ON COLUMN LIKE_PRODUCT.USER_NO IS '회원번호';
COMMENT ON COLUMN LIKE_PRODUCT.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN LIKE_PRODUCT.LIKEDATE IS '좋아요 일자';

INSERT INTO LIKE_PRODUCT VALUES( '1', '1', SYSDATE);
INSERT INTO LIKE_PRODUCT VALUES( '2', '2', SYSDATE);
INSERT INTO LIKE_PRODUCT VALUES( '3', '3', SYSDATE);
INSERT INTO LIKE_PRODUCT VALUES( '4', '4', SYSDATE);
INSERT INTO LIKE_PRODUCT VALUES( '5', '5', SYSDATE);


--------------------------------------------------------------- 제품후기 테이블
CREATE TABLE REVIEW
     (
       REVIEW_NO NUMBER CONSTRAINT PK_REVIEW PRIMARY KEY
     , PRODUCT_NO NUMBER CONSTRAINT FK_REVIEW_01 NOT NULL REFERENCES PRODUCT
     , USER_NO NUMBER CONSTRAINT FK_REVIEW_02 NOT NULL REFERENCES MEMBER
     , IMG_NO NUMBER CONSTRAINT FK_REVIEW_03 REFERENCES IMAGES
     , REVIEW_DETAIL VARCHAR2(4000)
     , SCORE NUMBER NOT NULL
     , REVIEW_DATE DATE DEFAULT SYSDATE NOT NULL 
     );
     
COMMENT ON COLUMN REVIEW.REVIEW_NO IS '후기번호';
COMMENT ON COLUMN REVIEW.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN REVIEW.USER_NO IS '회원번호';
COMMENT ON COLUMN REVIEW.IMG_NO IS '이미지 구분번호';
COMMENT ON COLUMN REVIEW.REVIEW_DETAIL IS '후기내용';
COMMENT ON COLUMN REVIEW.SCORE IS '평점';
COMMENT ON COLUMN REVIEW.REVIEW_DATE IS '작성일';

CREATE SEQUENCE SEQ_REVIEW
NOCACHE;

INSERT INTO REVIEW VALUES( SEQ_REVIEW.NEXTVAL, '1', '1', NULL, '가방이 맛있어요', 5, DEFAULT);
INSERT INTO REVIEW VALUES( SEQ_REVIEW.NEXTVAL, '2', '2', NULL, '감투가 냄새나요', 1, DEFAULT);
INSERT INTO REVIEW VALUES( SEQ_REVIEW.NEXTVAL, '3', '3', NULL, '방망이가 무거워요', 4, DEFAULT);
INSERT INTO REVIEW VALUES( SEQ_REVIEW.NEXTVAL, '4', '4', NULL, '뿔이 뾰족해요', 2, DEFAULT);
INSERT INTO REVIEW VALUES( SEQ_REVIEW.NEXTVAL, '5', '5', NULL, '묵이 뭉개졌어요', 3, DEFAULT);


------------------------------------------------------------------------ 채팅룸 테이블
CREATE TABLE CHATROOM(
          CHATROOM_NO NUMBER PRIMARY KEY,
              USER_NO NUMBER NOT NULL REFERENCES MEMBER,
       CHATROOM_TITLE VARCHAR2(90) NOT NULL,
      CHATROOM_STATUS CHAR(1) NOT NULL 
);

-- 채팅룸 테이블 시퀀스 생성 --
CREATE SEQUENCE SEQ_CHATROOM
NOCACHE;

-- 채팅룸 테이블 코멘트 --
COMMENT ON COLUMN CHATROOM.CHATROOM_NO IS '채팅방번호';
COMMENT ON COLUMN CHATROOM.USER_NO IS '채팅참여회원';
COMMENT ON COLUMN CHATROOM.CHATROOM_TITLE IS '채팅방제목';
COMMENT ON COLUMN CHATROOM.CHATROOM_STATUS IS '채팅방상태/Y:채팅방참여 N:채팅방미참여';


------------------------------------------------------------------------메세지 테이블
CREATE TABLE MESSAGE(
          MESSAGE_NO NUMBER PRIMARY KEY,
              SENDER NUMBER REFERENCES MEMBER,
             MESSAGE VARCHAR2(4000) NOT NULL,
        MESSAGE_DATE DATE NOT NULL,
             READ_YN CHAR(1) DEFAULT 'N' CHECK(READ_YN IN ('Y','N')),
         CHATROOM_NO NUMBER NOT NULL REFERENCES CHATROOM
);
    
-- 메세지 테이블 시퀀스 생성 --
CREATE SEQUENCE SEQ_MSG
NOCACHE;

-- 메세지 테이블 코멘트 --
COMMENT ON COLUMN MESSAGE.MESSAGE_NO IS '메세지번호';
COMMENT ON COLUMN MESSAGE.SENDER IS '발신자';
COMMENT ON COLUMN MESSAGE.MESSAGE IS '메세지';
COMMENT ON COLUMN MESSAGE.MESSAGE_DATE IS '발신일';
COMMENT ON COLUMN MESSAGE.READ_YN IS '읽기여부';
COMMENT ON COLUMN MESSAGE.CHATROOM_NO IS '채팅방번호';


------------------------------------------------------------------ 거래내역 테이블
CREATE TABLE TRADE(
           SELL_NO NUMBER PRIMARY KEY,
        PRODUCT_NO NUMBER REFERENCES PRODUCT NOT NULL,
          BUYER_NO NUMBER REFERENCES MEMBER NOT NULL,
         SELL_DATE DATE NOT NULL
);

-- 거래내역 테이블 시퀀스 생성 --
CREATE SEQUENCE SEQ_TRADE
NOCACHE;

-- 거래내역 테이블 코멘트 --
COMMENT ON COLUMN TRADE.SELL_NO IS '거래번호';
COMMENT ON COLUMN TRADE.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN TRADE.BUYER_NO IS '구매자번호';
COMMENT ON COLUMN TRADE.SELL_DATE IS '거래일';


----------------------------------------------------------------------- 신고분류 테이블
CREATE TABLE REPORT_TYPE(
   REPORT_TYPE_NO NUMBER PRIMARY KEY,
   REPORT_CATE VARCHAR2(400) 
);

COMMENT ON COLUMN REPORT_TYPE.REPORT_TYPE_NO IS '신고분류번호';
COMMENT ON COLUMN REPORT_TYPE.REPORT_CATE IS '신고카테고리';

INSERT 
       INTO REPORT_TYPE
       VALUES
     (
       10
     , '광고성 콘텐츠'
     );
INSERT 
       INTO REPORT_TYPE
       VALUES
     (
       20
     , '상품정보 불일치'
     );
INSERT 
       INTO REPORT_TYPE
       VALUES
     (
       30
     , '사기'
     );
INSERT 
       INTO REPORT_TYPE
       VALUES
     (
       40
     , '기타'
     );


--------------------------------------------------------- 신고 테이블
CREATE TABLE REPORT(
    REPORT_NO NUMBER PRIMARY KEY,
    PRODUCT_NO NUMBER NOT NULL REFERENCES PRODUCT,
    REPORTER NUMBER NOT NULL REFERENCES MEMBER,
    REPORT_TYPE_NO NUMBER NOT NULL REFERENCES REPORT_TYPE,
    REPORT_CONTENT VARCHAR2(4000) NOT NULL,
    REPORT_DATE DATE NOT NULL
);

COMMENT ON COLUMN REPORT.REPORT_NO IS '신고번호';
COMMENT ON COLUMN REPORT.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN REPORT.REPORTER IS '신고자';
COMMENT ON COLUMN REPORT.REPORT_TYPE_NO IS '신고 분류';
COMMENT ON COLUMN REPORT.REPORT_CONTENT IS '신고 내용';
COMMENT ON COLUMN REPORT.REPORT_DATE IS '신고 날짜';

CREATE SEQUENCE SEQ_REPORT
NOCACHE;

INSERT 
       INTO REPORT
       VALUES
     (
       SEQ_REPORT.NEXTVAL
        , '5'
        , '1'
        , '10'
        , '이거 광고에요 빠른 삭제 부탁드립니다'
        , '24/02/15'
     );
INSERT 
       INTO REPORT
       VALUES
     (
       SEQ_REPORT.NEXTVAL
        , '1'
        , '2'
        , '30'
        , '사기치지 마세요'
        , '24/02/16'
     );
INSERT 
       INTO REPORT
       VALUES
     (
       SEQ_REPORT.NEXTVAL
        , '2'
        , '3'
        , '20'
        , '감투를 샀는데 방망이가왔어요'
        , '24/02/16'
     );
INSERT 
       INTO REPORT
       VALUES
     (
       SEQ_REPORT.NEXTVAL
        , '3'
        , '4'
        , '40'
        , '상품이 불량인거같아요'
        , '24/02/15'
     );
INSERT 
       INTO REPORT
       VALUES
     (
       SEQ_REPORT.NEXTVAL
        , '4'
        , '5'
        , '10'
        , '딱봐도 광고에요'
        , '24/02/15'
     );



------------------------------------------------------------------- 공지사항 테이블
CREATE TABLE NOTICE(
    NOTICE_NO NUMBER PRIMARY KEY,
    USER_NO NUMBER NOT NULL REFERENCES MEMBER,
    NOTICE_TITLE VARCHAR2(400) NOT NULL,
    NOTICE_CONTENT VARCHAR2(4000) NOT NULL,
    NOTICE_DATE DATE NOT NULL,
    COUNT NUMBER NOT NULL,
    NOTICE_STATUS CHAR(1) DEFAULT 'Y' CHECK(NOTICE_STATUS IN ('Y','N'))
);

COMMENT ON COLUMN NOTICE.NOTICE_NO IS '공지사항 번호';
COMMENT ON COLUMN NOTICE.USER_NO IS '작성자';
COMMENT ON COLUMN NOTICE.NOTICE_TITLE IS '공지사항 제목';
COMMENT ON COLUMN NOTICE.NOTICE_CONTENT IS '공지사항 내용';
COMMENT ON COLUMN NOTICE.NOTICE_DATE IS '공지사항 날짜';
COMMENT ON COLUMN NOTICE.COUNT IS '조회수';
COMMENT ON COLUMN NOTICE.NOTICE_STATUS IS '게시 유형';

CREATE SEQUENCE SEQ_NOTICE 
NOCACHE;

INSERT 
       INTO NOTICE
       VALUES
     (
       SEQ_NOTICE.NEXTVAL
        , 1
        , '쿨거래 버튼 관련 공지사항입니다'
        , '쿨거래 버튼은 신뢰점수 300점부터입니다'
        , '24/02/10'
        , 100
        , 'Y'
     );
INSERT 
       INTO NOTICE
       VALUES
     (
       SEQ_NOTICE.NEXTVAL
        , 1
        , '신고 관련 공지사항입니다'
        , '게시글 10회 신고시 작성자 1회 경고입니다'
        , '24/02/10'
        , 200
        , 'Y'
     );
INSERT 
       INTO NOTICE
       VALUES
     (
       SEQ_NOTICE.NEXTVAL
        , 1
        , '경고 관련 공지사항입니다'
        , '경고 3회시 추방입니다'
        , '24/02/11'
        , 300
        , 'Y'
     );
INSERT 
       INTO NOTICE
       VALUES
     (
       SEQ_NOTICE.NEXTVAL
        , 1
        , '신뢰점수 관련 공지사항입니다'
        , '신뢰점수는 기본100점부터입니다'
        , '24/02/12'
        , 400
        , 'Y'
     );
INSERT 
       INTO NOTICE
       VALUES
     (
       SEQ_NOTICE.NEXTVAL
        , 1
        , '쿨거래 버튼 관련 공지사항입니다'
        , '쿨거래 버튼은 신뢰점수 300점부터입니다'
        , '24/02/13'
        , 500
        , 'Y'
     );


------------------------------------------------------------------- 알림 테이블
CREATE TABLE ALARM(
    ALARM_NO NUMBER PRIMARY KEY,
    USER_NO NUMBERREFERENCES MEMBER,
    ALARM_MSG VARCHAR2(4000) NOT NULL,
    READ_YN CHAR(1) NOT NULL CHECK(READ_YN IN ('Y','N')),
    SENT_DATE DATE NOT NULL
);

COMMENT ON COLUMN ALARM.ALARM_NO IS '알림번호';
COMMENT ON COLUMN ALARM.USER_NO IS '발신회원번호';
COMMENT ON COLUMN ALARM.ALARM_MSG IS '알림메세지';
COMMENT ON COLUMN ALARM.READ_YN IS '읽기 여부';
COMMENT ON COLUMN ALARM.SENT_DATE IS '발신 일자';

CREATE SEQUENCE SEQ_ALARM
NOCACHE;

INSERT 
       INTO ALARM
       VALUES
     (
          SEQ_ALARM.NEXTVAL
        , 1
        , '도깨비 팬티 살 수 있을까요'
        , 'N'
        , '24/02/14'
     );
INSERT 
       INTO ALARM
       VALUES
     (
       SEQ_ALARM.NEXTVAL
        , 2
        , '도깨비 감투 살 수 있을까요'
        , 'N'
        , '24/02/14'
     );
INSERT 
       INTO ALARM
       VALUES
     (
       SEQ_ALARM.NEXTVAL
        , 3
        , '도깨비 방망이 살 수 있을까요'
        , 'N'
        , '24/02/15'
     );
INSERT 
       INTO ALARM
       VALUES
     (
       SEQ_ALARM.NEXTVAL
        , 4
        , '도깨비 뿔 살 수 있을까요'
        , 'N'
        , '24/02/15'
     );
INSERT 
       INTO ALARM
       VALUES
     (
       SEQ_ALARM.NEXTVAL
        , 5
        , '메밀묵 살 수 있을까요'
        , 'N'
        , '24/02/16'
     );
COMMIT;

/*
멤버시퀀스 M
계좌테이블 BA
주소테이블 A
상품테이블 P
이미지테이블 I
리뷰테이블 RV
채팅테이블 CR
메세지테이블 MSG
거래내역테이블 T
*/
