<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="countSalesRate">
		SELECT 
		       NVL(SUM(PRICE),0) salesRate
		  FROM PRODUCT 
		  JOIN TRADE  USING(PRODUCT_NO)
	</entry>
	
	<entry key="todayStockGoods">
		SELECT 
		       NVL(COUNT(*),0) tstockgoods
		  FROM PRODUCT
		 WHERE UPLOAD_DATE = TO_CHAR(SYSDATE,'YY/MM/DD')
	</entry>
	
	<entry key="countReportedProduct">
		SELECT NVL(COUNT(*),0) reportedproduct
		  FROM (SELECT DISTINCT
				       PRODUCT_NO
				  FROM PRODUCT
				  JOIN REPORT USING (PRODUCT_NO)
				 WHERE REPORT_DATE = TO_CHAR(SYSDATE,'YY/MM/DD'))
	</entry>
	
	<entry key="selectProductCount">
		SELECT 
		       COUNT(*) "count"
		  FROM PRODUCT
		 WHERE UPLOAD_TYPE='Y'
	</entry>
	
	<entry key="selectRandomProduct">
		SELECT 
			   * 
		  FROM 
		     ( 
		       SELECT 
		       	      ROWNUM RNUM
		       	    , A.*
		       	    , CASE WHEN ABS(TRUNC(SYSDATE) - TRUNC(A.UPLOAD_DATE)) &gt;= 7 
		       	    		    THEN TO_CHAR(A.UPLOAD_DATE, 'YYYY-MM-DD') 
		       	    	   WHEN TRUNC(SYSDATE) = TRUNC(A.UPLOAD_DATE) 
		       	    	   	    THEN 
		       	    	   	    CASE WHEN (SYSDATE - A.UPLOAD_DATE) * 24 &lt; 1 
		       	    	   	    	 THEN TO_CHAR(FLOOR((SYSDATE - A.UPLOAD_DATE) * 1440)) || '분 전' 
		       	    	   	    ELSE TO_CHAR(FLOOR((SYSDATE - A.UPLOAD_DATE) * 24)) || '시간 전' END 
		       	      ELSE TO_CHAR(TRUNC(SYSDATE) - TRUNC(A.UPLOAD_DATE)) || '일 전' END AS TIME_DIFF 
		       	 FROM 
		       	    ( SELECT PRODUCT_NO
		       	    	   , SELLER_NO
		       	    	   , PRODUCT_NAME
		       	    	   , PRICE
		       	    	   , ZONE
		       	    	   , UPLOAD_DATE
		       	        FROM PRODUCT 
		       	       WHERE UPLOAD_TYPE = 'Y' 
		       	       ORDER 
		       	          BY DBMS_RANDOM.VALUE 
		       	           ) A 
		       	     ) 
		       	 WHERE RNUM BETWEEN 1 AND 40
	</entry>
	
	<entry key="selectCategoryList">
		SELECT 
		       CATEGORY_NAME
		     , CATEGORY_NO
		     , COUNT(CATEGORY_NO) "count"
		  FROM PRODUCT 
		  JOIN CATEGORY 
		 USING (CATEGORY_NO)
		 GROUP
		    BY CATEGORY_NAME
		     , CATEGORY_NO
	</entry>
	
	<entry key="searchProductList">
	  SELECT PRODUCT_NO
     	    	   , SELLER_NO
     	    	   , PRODUCT_NAME
     	    	   , CATEGORY_NO
     	    	   , PRICE
     	    	   , ZONE
     	    	   , UPLOAD_DATE
     	    	   , CASE WHEN ABS(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) &gt;= 7 
     	    		     THEN TO_CHAR(UPLOAD_DATE, 'YYYY-MM-DD') 
	       	     WHEN TRUNC(SYSDATE) = TRUNC(UPLOAD_DATE) 
	       	     THEN 
	       	    	  CASE WHEN (SYSDATE - UPLOAD_DATE) * 24 &lt; 1 
	       	    	   	   THEN TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 1440)) || '분 전' 
	       	    			    ELSE TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 24)) || '시간 전' END 
	       	     ELSE TO_CHAR(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) || '일 전' END AS TIME_DIFF
     	         FROM PRODUCT 
     	        WHERE UPLOAD_TYPE = 'Y'
     	          AND PRODUCT_NAME LIKE '%' || ? || '%'
     	           OR PRODUCT_DESC LIKE '%' || ? || '%'
	</entry> 
	
	<entry key="searchCatList">
		SELECT 
		       CATEGORY_NAME
		     , CATEGORY_NO
		     , COUNT(CASE WHEN (PRODUCT_NAME LIKE '%' || ? || '%' OR PRODUCT_DESC LIKE '%' || ? || '%') THEN 1 END) AS count
		  FROM CATEGORY 
		  LEFT 
		  JOIN PRODUCT USING (CATEGORY_NO)
		 GROUP 
		    BY CATEGORY_NAME, CATEGORY_NO
	</entry>
	
	<entry key="countProduct">
		SELECT 
		       COUNT(*) count
		  FROM PRODUCT 
		 WHERE 
		 	 ( 
		 	   PRODUCT_NAME LIKE '%' || ? || '%'
		 	   OR PRODUCT_DESC LIKE '%' || ? || '%'
		 	 )  
	</entry>

	<entry key="selectRecentList">
		SELECT 
			   * 
		  FROM 
		     ( 
		       SELECT 
		       	      ROWNUM RNUM
		       	    , A.*
		       	    , CASE WHEN ABS(TRUNC(SYSDATE) - TRUNC(A.UPLOAD_DATE)) &gt;= 7 
		       	    		    THEN TO_CHAR(A.UPLOAD_DATE, 'YYYY-MM-DD') 
		       	    	   WHEN TRUNC(SYSDATE) = TRUNC(A.UPLOAD_DATE) 
		       	    	   	    THEN 
		       	    	   	    CASE WHEN (SYSDATE - A.UPLOAD_DATE) * 24 &lt; 1 
		       	    	   	    	 THEN TO_CHAR(FLOOR((SYSDATE - A.UPLOAD_DATE) * 1440)) || '분 전' 
		       	    	   	    ELSE TO_CHAR(FLOOR((SYSDATE - A.UPLOAD_DATE) * 24)) || '시간 전' END 
		       	      ELSE TO_CHAR(TRUNC(SYSDATE) - TRUNC(A.UPLOAD_DATE)) || '일 전' END AS TIME_DIFF 
		       	 FROM 
		       	    ( SELECT PRODUCT_NO
		       	    	   , SELLER_NO
		       	    	   , PRODUCT_NAME
		       	    	   , PRICE
		       	    	   , ZONE
		       	    	   , UPLOAD_DATE
		       	        FROM PRODUCT 
		       	       WHERE UPLOAD_TYPE = 'Y' 
		       	       ORDER 
		       	          BY PRODUCT_NO DESC 
		       	           ) A 
		       	     ) 
		       	 WHERE RNUM BETWEEN 1 AND 40
	</entry>
	
	<entry key="selectProductDetail">
		SELECT
			   PRODUCT_NO 
		     , USER_ID
		     , CATEGORY_NAME
		     , PRODUCT_NAME
		     , PRICE
		     , PRODUCT_DESC
		     , ZONE
		     , COUNT
		     , ONDO
		     , PSTATUS
		     , TRADE_TYPE
		     , TO_CHAR(UPLOAD_DATE, 'RR"-"MM"-"DD') UPLOAD_DATE
		     , UPLOAD_TYPE
		     , CASE WHEN ABS(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) &gt;= 7 
     	    		     THEN TO_CHAR(UPLOAD_DATE, 'YYYY-MM-DD') 
	       	     WHEN TRUNC(SYSDATE) = TRUNC(UPLOAD_DATE) 
	       	     THEN 
	       	    	  CASE WHEN (SYSDATE - UPLOAD_DATE) * 24 &lt; 1 
	       	    	   	   THEN TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 1440)) || '분 전' 
	       	    			    ELSE TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 24)) || '시간 전' END 
	       	     ELSE TO_CHAR(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) || '일 전' END AS TIME_DIFF
		  FROM PRODUCT
		  JOIN MEMBER ON (USER_NO = SELLER_NO)
		  JOIN PRODUCT_STATUS ON (PRODUCT_STATUS = PSTATUS_NO)
		  JOIN CATEGORY USING (CATEGORY_NO)
		 WHERE PRODUCT_NO = ?
	</entry>
	
	<entry key="selectMonthSales">
		SELECT
		       TO_CHAR(TRADE_DATE,'YY/MM') TRADE_DATE
		     , SUM(PRICE) price
		  FROM PRODUCT
		  JOIN TRADE USING(PRODUCT_NO)
		 WHERE TO_CHAR(TRADE_DATE,'YY') = TO_CHAR(SYSDATE,'YY') <!-- 년도가 25년되면 넘어가도록 설정 -->
		 GROUP
		    BY TO_CHAR(TRADE_DATE,'YY/MM')
		 ORDER
            BY 1
	</entry>
	
	<entry key="selectCategorySales">
		SELECT
		       CATEGORY_NAME
		     , COUNT(PRODUCT_NO) count
		  FROM PRODUCT
		  JOIN CATEGORY USING(CATEGORY_NO)
		  JOIN TRADE USING(PRODUCT_NO)
		 GROUP
		    BY CATEGORY_NAME
	</entry>
	
	<entry key="increaseCount">
		UPDATE
		       PRODUCT
		   SET COUNT = COUNT + 1
		 WHERE PRODUCT_NO = ?
		   AND UPLOAD_TYPE = 'Y'
	</entry>
	
	<entry key="selectImages">
		SELECT 
			   REF_PNO
		     , IMG_NO
		     , ORIGIN_NAME  
		     , CHANGE_NAME
		     , IMG_PATH
		  FROM IMAGES
		 WHERE REF_PNO = ?
		   AND IMG_STATUS ='Y'
	</entry>
	
	<entry key="getTitleImg">
		SELECT 
		       IMG_NO
		     , REF_PNO  
		     , ORIGIN_NAME  
		     , CHANGE_NAME
		     , IMG_PATH
		  FROM IMAGES
		 WHERE REF_PNO = ?
		   AND IMG_STATUS ='Y'
           AND IMG_LEVEL = 1
	</entry>
	<entry key="insertProductSell">
		INSERT
		  INTO PRODUCT
		  (
		    PRODUCT_NO
		  , SELLER_NO
		  , CATEGORY_NO
		  , PRODUCT_NAME
		  , PRICE
		  , PRODUCT_DESC
		  , PIECES
		  , ZONE
		  , PRODUCT_STATUS
		  , DELIVERY_CHARGE
		  , TRADE_TYPE
		  )
		  VALUES
		  (
		    SEQ_PRODUCT.NEXTVAL
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  )
	</entry>
	
	<entry key="insertImagesList">
		INSERT
		  INTO IMAGES
		  (
		    IMG_NO
		  , REF_PNO
		  , IMG_LEVEL
		  , ORIGIN_NAME
		  , CHANGE_NAME
		  , IMG_PATH
		  )
		  VALUES
		  (
		    SEQ_IMG.NEXTVAL
		  , SEQ_PRODUCT.CURRVAL
		  , ?
		  , ?
		  , ?
		  , ?
		  )
	</entry>
	
	<entry key="insertPopularWord">
		INSERT
		  INTO t_popular_word
		VALUES
		      (
		      ?
		      ,SYSDATE
		      )
	</entry>
		
	<entry key="selectPopularWord">
		SELECT * 
	      FROM (
			    SELECT popw_word, COUNT(popw_word) as wordcnt
			    FROM t_popular_word
			    GROUP BY popw_word
			    ORDER BY wordcnt DESC
				) 
		 WHERE ROWNUM &lt;= 100
	</entry>
	
	<entry key="countPopularWord">
		SELECT COUNT(*) count
		  FROM (
			    SELECT popw_word
			    FROM t_popular_word
			    GROUP BY popw_word
			   ) 
	</entry>
	
	<entry key="deletePopularSearch">
		DELETE
		  FROM t_user_popular_word
	</entry>
	
	<entry key="insertPopularSearch">
		INSERT 
		  INTO t_user_popular_word
			(
			  user_popw_word
			, user_popw_date
			, user_popw_order
			)
	    VALUES
			(
			  ?
			, SYSDATE
			, (SELECT NVL(MAX(a.user_popw_order) + 1, 1) FROM t_user_popular_word a)
			)
	</entry>
	
	<entry key="selectRecommendProduct">
		SELECT * 
		  FROM
		       ( 
		       SELECT
		              PRODUCT_NO
		            , PRODUCT_NAME
		            , ROWNUM RNUM 
		         FROM PRODUCT
		        WHERE PRODUCT_NO != ? 
		        ORDER
		           BY 
		              DBMS_RANDOM.VALUE
		       ) 
		 WHERE 
		       RNUM &lt;= 20
	</entry>
	
	<entry key="countUserPopwList">
			    SELECT COUNT(user_popw_word) count
			    FROM t_user_popular_word
	</entry>
	
	<entry key="selectUserPopwList">
		SELECT *
		  FROM(
		        SELECT ROWNUM RNUM, A.*
		          FROM(
		            SELECT USER_POPW_ORDER, USER_POPW_WORD
		              FROM t_user_popular_word 
		             ORDER
		                BY user_popw_order
		                ) A
		    )
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectDaySales">
		SELECT
		       TO_CHAR(TRADE_DATE,'MM/DD') TRADE_DATE
		     , SUM(PRICE) price
		  FROM PRODUCT
		  JOIN TRADE USING(PRODUCT_NO)
		 WHERE TO_CHAR(TRADE_DATE,'YY') = TO_CHAR(SYSDATE,'YY') 
		   AND TRADE_DATE > SYSDATE-7
		 GROUP
		    BY trade_date
		 ORDER
            BY trade_date
	</entry>
	
	<entry key="deleteBoard">
		UPDATE PRODUCT
		   SET UPLOAD_TYPE = 'N'
		 WHERE PRODUCT_NO = ?
	</entry>
	
	<entry key="updateSellForm">
		SELECT
			   PRODUCT_NO
			 , CATEGORY_NO
		     , CATEGORY_NAME
		     , PRODUCT_NAME
		     , PRICE
		     , PRODUCT_DESC
		     , PIECES
		     , ZONE
		     , PRODUCT_STATUS
		     , DELIVERY_CHARGE
		     , TRADE_TYPE
		     , NVL(IMG_PATH || CHANGE_NAME, '') "TITLEIMG"
		  FROM PRODUCT
		  JOIN CATEGORY USING (CATEGORY_NO)
	 LEFT JOIN IMAGES ON (PRODUCT_NO = REF_PNO)
		 WHERE PRODUCT_NO = ?
	  <!-- AND IMG_STATUS = 'Y'  -->
	</entry>
	
	<entry key="updateProductSell">
		UPDATE
		       PRODUCT
		   SET CATEGORY_NO = ?
		     , PRODUCT_NAME = ?
		     , PRICE = ?
		     , PRODUCT_DESC = ?
		     , PIECES = ?
		     , ZONE = ?
		     , PRODUCT_STATUS = ?
		     , DELIVERY_CHARGE = ?
		     , TRADE_TYPE = ?
		 WHERE PRODUCT_NO = ?
	</entry>
	
	<entry key="insertNewImagesList">
		INSERT
		  INTO IMAGES
		  (
		    IMG_NO
		  , REF_PNO
		  , REF_UNO
		  , IMG_LEVEL
		  , ORIGIN_NAME
		  , CHANGE_NAME
		  , IMG_PATH
		  )
		  VALUES
		  (
		    SEQ_IMG.NEXTVAL
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  )
	</entry>
	
	<entry key="deleteProductSellImage">
		 DELETE
		        IMAGES
		  WHERE REF_PNO = ?
	</entry>
	
	<entry key="likeInsert">
		INSERT
		       INTO LIKE_PRODUCT
		     (
		       USER_NO
		     , PRODUCT_NO
		     )	  
		       VALUES
		     (
			   ?
			 , ?
			 )
	</entry>

	<entry key="selectLikeCount">
		SELECT COUNT(*) COUNT
		  FROM LIKE_PRODUCT
		 WHERE PRODUCT_NO = ?
		   AND LIKE_STATUS = 'Y'
	</entry>
	

	
	<entry key="searchByCategory">
			  SELECT PRODUCT_NO
     	    	   , SELLER_NO
     	    	   , PRODUCT_NAME
     	    	   , CATEGORY_NO
     	    	   , PRICE
     	    	   , ZONE
     	    	   , UPLOAD_DATE
     	    	   , CASE WHEN ABS(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) &gt;= 7 
     	    		     THEN TO_CHAR(UPLOAD_DATE, 'YYYY-MM-DD') 
	       	     WHEN TRUNC(SYSDATE) = TRUNC(UPLOAD_DATE) 
	       	     THEN 
	       	    	  CASE WHEN (SYSDATE - UPLOAD_DATE) * 24 &lt; 1 
	       	    	   	   THEN TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 1440)) || '분 전' 
	       	    			    ELSE TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 24)) || '시간 전' END 
	       	     ELSE TO_CHAR(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) || '일 전' END AS TIME_DIFF
     	         FROM PRODUCT 
     	        WHERE UPLOAD_TYPE = 'Y'
     	          AND CATEGORY_NO = ?
     	        ORDER
     	           BY PRODUCT_NO DESC  
	</entry>
	
	<entry key="getCategoryName">
		SELECT CATEGORY_NAME
		  FROM CATEGORY
		 WHERE CATEGORY_NO = ? 
	</entry>
	
	<entry key="countProductByCat">
		SELECT COUNT(*) count
		  FROM PRODUCT
		 WHERE CATEGORY_NO = ? 
	</entry>
	
	<entry key="arrangeByDateC">
		SELECT PRODUCT_NO
     	    	   , SELLER_NO
     	    	   , PRODUCT_NAME
     	    	   , CATEGORY_NO
     	    	   , PRICE
     	    	   , ZONE
     	    	   , UPLOAD_DATE
     	    	   , CASE WHEN ABS(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) &gt;= 7 
     	    		     THEN TO_CHAR(UPLOAD_DATE, 'YYYY-MM-DD') 
	       	     WHEN TRUNC(SYSDATE) = TRUNC(UPLOAD_DATE) 
	       	     THEN 
	       	    	  CASE WHEN (SYSDATE - UPLOAD_DATE) * 24 &lt; 1 
	       	    	   	   THEN TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 1440)) || '분 전' 
	       	    			    ELSE TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 24)) || '시간 전' END 
	       	     ELSE TO_CHAR(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) || '일 전' END AS TIME_DIFF
     	         FROM PRODUCT 
     	        WHERE UPLOAD_TYPE = 'Y'
     	          AND CATEGORY_NO = ?
     	        ORDER
     	           BY UPLOAD_DATE DESC
	</entry>
	
	<entry key="arrangePriceHighC">
		SELECT PRODUCT_NO
     	    	   , SELLER_NO
     	    	   , PRODUCT_NAME
     	    	   , CATEGORY_NO
     	    	   , PRICE
     	    	   , ZONE
     	    	   , UPLOAD_DATE
     	    	   , CASE WHEN ABS(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) &gt;= 7 
     	    		     THEN TO_CHAR(UPLOAD_DATE, 'YYYY-MM-DD') 
	       	     WHEN TRUNC(SYSDATE) = TRUNC(UPLOAD_DATE) 
	       	     THEN 
	       	    	  CASE WHEN (SYSDATE - UPLOAD_DATE) * 24 &lt; 1 
	       	    	   	   THEN TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 1440)) || '분 전' 
	       	    			    ELSE TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 24)) || '시간 전' END 
	       	     ELSE TO_CHAR(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) || '일 전' END AS TIME_DIFF
     	         FROM PRODUCT 
     	        WHERE UPLOAD_TYPE = 'Y'
     	          AND CATEGORY_NO = ?
     	        ORDER
     	           BY PRICE DESC
	</entry>
	
	<entry key="arrangePriceLowC">
		SELECT PRODUCT_NO
     	    	   , SELLER_NO
     	    	   , PRODUCT_NAME
     	    	   , CATEGORY_NO
     	    	   , PRICE
     	    	   , ZONE
     	    	   , UPLOAD_DATE
     	    	   , CASE WHEN ABS(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) &gt;= 7 
     	    		     THEN TO_CHAR(UPLOAD_DATE, 'YYYY-MM-DD') 
	       	     WHEN TRUNC(SYSDATE) = TRUNC(UPLOAD_DATE) 
	       	     THEN 
	       	    	  CASE WHEN (SYSDATE - UPLOAD_DATE) * 24 &lt; 1 
	       	    	   	   THEN TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 1440)) || '분 전' 
	       	    			    ELSE TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 24)) || '시간 전' END 
	       	     ELSE TO_CHAR(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) || '일 전' END AS TIME_DIFF
     	         FROM PRODUCT 
     	        WHERE UPLOAD_TYPE = 'Y'
     	          AND CATEGORY_NO = ?
     	        ORDER
     	           BY PRICE ASC
	</entry>
	
	<entry key="arrangeByDateS">
		SELECT PRODUCT_NO
    	     , SELLER_NO
    	     , PRODUCT_NAME
    	     , CATEGORY_NO
    	     , PRICE
    	     , ZONE
    	     , UPLOAD_DATE
    	     , CASE WHEN ABS(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) &gt;= 7 
    		     THEN TO_CHAR(UPLOAD_DATE, 'YYYY-MM-DD') 
  	      WHEN TRUNC(SYSDATE) = TRUNC(UPLOAD_DATE) 
  	      THEN 
  	    	   CASE WHEN (SYSDATE - UPLOAD_DATE) * 24 &lt; 1 
  	    	   	   THEN TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 1440)) || '분 전' 
  	    			    ELSE TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 24)) || '시간 전' END 
  	      ELSE TO_CHAR(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) || '일 전' END AS TIME_DIFF
          FROM PRODUCT 
         WHERE UPLOAD_TYPE = 'Y'
           AND PRODUCT_NAME LIKE '%' || ? || '%'
            OR PRODUCT_DESC LIKE '%' || ? || '%'
         ORDER
            BY UPLOAD_DATE DESC
	</entry>
	
	<entry key="arrangePriceHighS">
		SELECT PRODUCT_NO
    	     , SELLER_NO
    	     , PRODUCT_NAME
    	     , CATEGORY_NO
    	     , PRICE
    	     , ZONE
    	     , UPLOAD_DATE
    	     , CASE WHEN ABS(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) &gt;= 7 
    		     THEN TO_CHAR(UPLOAD_DATE, 'YYYY-MM-DD') 
  	      WHEN TRUNC(SYSDATE) = TRUNC(UPLOAD_DATE) 
  	      THEN 
  	    	   CASE WHEN (SYSDATE - UPLOAD_DATE) * 24 &lt; 1 
  	    	   	   THEN TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 1440)) || '분 전' 
  	    			    ELSE TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 24)) || '시간 전' END 
  	      ELSE TO_CHAR(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) || '일 전' END AS TIME_DIFF
          FROM PRODUCT 
         WHERE UPLOAD_TYPE = 'Y'
           AND PRODUCT_NAME LIKE '%' || ? || '%'
            OR PRODUCT_DESC LIKE '%' || ? || '%'
         ORDER
            BY PRICE DESC
	</entry>
	
	<entry key="arrangePriceLowS">
		SELECT PRODUCT_NO
    	     , SELLER_NO
    	     , PRODUCT_NAME
    	     , CATEGORY_NO
    	     , PRICE
    	     , ZONE
    	     , UPLOAD_DATE
    	     , CASE WHEN ABS(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) &gt;= 7 
    		     THEN TO_CHAR(UPLOAD_DATE, 'YYYY-MM-DD') 
  	      WHEN TRUNC(SYSDATE) = TRUNC(UPLOAD_DATE) 
  	      THEN 
  	    	   CASE WHEN (SYSDATE - UPLOAD_DATE) * 24 &lt; 1 
  	    	   	   THEN TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 1440)) || '분 전' 
  	    			    ELSE TO_CHAR(FLOOR((SYSDATE - UPLOAD_DATE) * 24)) || '시간 전' END 
  	      ELSE TO_CHAR(TRUNC(SYSDATE) - TRUNC(UPLOAD_DATE)) || '일 전' END AS TIME_DIFF
          FROM PRODUCT 
         WHERE UPLOAD_TYPE = 'Y'
           AND PRODUCT_NAME LIKE '%' || ? || '%'
            OR PRODUCT_DESC LIKE '%' || ? || '%'
         ORDER
            BY PRICE ASC
	</entry>
	
	<entry key="checkLike">
		SELECT LIKE_STATUS
		  FROM LIKE_PRODUCT
		 WHERE USER_NO = ?
		   AND PRODUCT_NO = ?
	</entry>
	
	<entry key="checkYn">
		SELECT LIKE_STATUS
		  FROM LIKE_PRODUCT
		 WHERE USER_NO = ?
		   AND PRODUCT_NO = ?
	</entry>
	
	<entry key="updateYesLike">
		UPDATE LIKE_PRODUCT
		   SET LIKE_STATUS = 'Y'
		 WHERE USER_NO = ?
		   AND PRODUCT_NO = ?
	</entry>
	
	<entry key="updateNoLike">
		UPDATE LIKE_PRODUCT
		   SET LIKE_STATUS = 'N'
		 WHERE USER_NO = ?
		   AND PRODUCT_NO = ?
	</entry>
	
	<entry key="getAddressList">
		SELECT
		       DELIVERY_ADDRESS_NO
		     , USER_NO
		     , ADDRESS
		     , DETAIL
		     , POSTCODE
		     , TITLE
		     , NAME
		     , PHONE
		     , MAIN_YN
		  FROM DELIVERY_ADDRESS
		 WHERE USER_NO = ?
	</entry>
	
	<entry key="getReportedUserNo">
		SELECT
		       SELLER_NO
		  FROM PRODUCT
		 WHERE PRODUCT_NO = ?
	</entry>
</properties>